version: '3'

services:

  redis:
    image: redis
    networks:
      - deployml_network

  detectserver:
    image: tdbm/faceserver-detect-face
    build: 
      context: ./faceserver
      dockerfile: Dockerfile.detect
    depends_on:
      - redis
    networks:
      - deployml_network
    env_file:
      - app.env
    environment:
      - SERVER_SLEEP=0.1 # Time in ms between each poll by model server against Redis
      - BATCH_SIZE=32
      - DETECTOR_BACKEND=ssd
      - RECOGNIZER_BACKEND=ArcFace
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == worker

  embeddserver:
    image: tdbm/faceserver-embed-face
    build: 
      context: ./faceserver
      dockerfile: Dockerfile.recognize
    depends_on:
      - redis
    networks:
      - deployml_network
    env_file:
      - app.env
    environment:
      - SERVER_SLEEP=0.1 # Time in ms between each poll by model server against Redis
      - BATCH_SIZE=32
      - DETECTOR_BACKEND=ssd
      - RECOGNIZER_BACKEND=ArcFace
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == worker

  lpserver:
    image: tdbm/license-plates
    build: 
      context: ./license_plates
      dockerfile: Dockerfile
    depends_on:
      - redis
    networks:
      - deployml_network
    env_file:
      - app.env
    environment:
      - SERVER_SLEEP=0.1 # Time in ms between each poll by model server against Redis
      - BATCH_SIZE=32
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == worker

  webserver:
    image: tdbm/webserver
    build: ./webserver
    ports:
      - "11080:80"
    networks:
      - deployml_network
    depends_on:
      - redis
    env_file:
      - app.env
    environment:
      - CLIENT_SLEEP=0.1 # Time in ms between each poll by web server against Redis
      - CLIENT_MAX_TRIES=100 # Num tries by web server to retrieve results from Redis before giving up
    deploy:
      placement:
        constraints:
          - node.role == manager

networks:
  deployml_network:
  postgres:
    driver: bridge